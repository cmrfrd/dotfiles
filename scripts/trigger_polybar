#!/usr/bin/env bash
set -e

if [ -e "/tmp/polybartrig.pid" ]
then
  if ps -p `cat /tmp/polybartrig.pid` > /dev/null
  then
    kill `cat /tmp/polybartrig.pid`
  fi
fi

echo $$ > /tmp/polybartrig.pid  # Save the pid

function run_polybar {
  echo "Running polybar"

  ## Save the first monitor
  # MONITOR=$(xrandr --query | grep " connected" | col 1 | head -n 1)
  # MONITOR="eDP1"
  # echo "Running poly bar with monitor ${MONITOR}"
  # bash -c "polybar --reload top"

   # for m in $(xrandr --query | grep " connected" | cut -d" " -f1); do
   #   echo "${m}"

   #   if [ "${m}" == "$1" ]
   #   then
   #     MONITOR=$m polybar --reload top > /dev/null 2>&1 &
   #   else
   #     MONITOR=$m polybar --reload top-secondary > /dev/null 2>&1 &
   #   fi
   # done

  if type "xrandr" > /dev/null; then
    for m in $(xrandr --query | grep " connected" | cut -d" " -f1); do
	    if [ $m == 'eDP-1' ]
	    then
		    MONITOR=$m polybar --reload top -c ~/.dotfiles/config/polybar/config &
	    elif [ $m == 'HDMI1' ]
	    then
		    MONITOR=$m polybar --reload top-secondary -c ~/.dotfiles/config/polybar/config &
	    fi
    done
  else
		polybar --reload top -c ~/.dotfiles/config/polybar/config &
  fi


   sleep infinity;
}

while pgrep -u $UID -x polybar > /dev/null; do sleep 1; done

while `true`
do
  if [ "$(xdotool get_num_desktops)" -gt 0 ]
  then
    run_polybar $1;
    break;
  fi

  echo "Waiting for many desktops"
  sleep 1
done
