#!/usr/bin/env sh

NAME=plantuml_local
PLANTUML_VERSION=1.2018.5

# cat << EOF > /tmp/Dockerfile.${NAME}
# FROM rainee/docker-alpine-oraclejdk8
# RUN \
#   apk add --no-cache graphviz wget ca-certificates && \
#   wget "https://sourceforge.net/projects/plantuml/files/${PLANTUML_VERSION}/plantuml.${PLANTUML_VERSION}.jar/download" -O plantuml.jar && \
#   apk del wget ca-certificates
# ENV LANG en_US.UTF-8
# ENTRYPOINT ["java", "-jar", "plantuml.jar"]
# EOF
cat << EOF > /tmp/Dockerfile.${NAME}
FROM alpine
RUN \
  apk add --no-cache graphviz wget ca-certificates openjdk8 maven && \
  wget "https://sourceforge.net/projects/plantuml/files/${PLANTUML_VERSION}/plantuml.${PLANTUML_VERSION}.jar/download" -O plantuml.jar && \
  apk del wget ca-certificates
RUN mvn dependency:get -Dartifact=org.scilab.forge:jlatexmath:1.0.7
RUN mvn dependency:get -Dartifact=org.apache.xmlgraphics:batik-all:1.14
RUN mvn dependency:get -Dartifact=org.scilab.forge:jlatexmath-font-cyrillic:1.0.7
RUN mvn dependency:get -Dartifact=org.scilab.forge:jlatexmath-font-greek:1.0.7
ENV LANG en_US.UTF-8
ENTRYPOINT [ "sh", "-c", "java -classpath plantuml.jar:\$(find ~/.m2/ -type f -name '*.jar' | tr '\n' ':') net.sourceforge.plantuml.Run -pipe" ]
EOF

mkdir -p /tmp/none
podman build -q -t ${NAME} -f /tmp/Dockerfile.${NAME} ~/.dotfiles > /dev/null
# podman build -t ${NAME} -f /tmp/Dockerfile.${NAME} /tmp/none
cat - | podman run --rm -i ${NAME} $@
